---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: sync-rgwuser-secrets
  annotations:
    policies.kyverno.io/title: Sync Ceph RGW User Secrets
    policies.kyverno.io/subject: Secret
    policies.kyverno.io/description: >-
      This policy watches the `rook-ceph` Namespace for new 
      `CephObjectStoreUser` objects where the label sync_to_namespace
      exists. For all objects which meet this criteria, the Secret they
      create (defined in their `status.info.secretName`) will be
      synced to the Namespace listed in the aformentioned label.
      NOTE!! - only one Namespace can be synced to as of this version.
spec:
  mutateExistingOnPolicyUpdate: true
  generateExistingOnPolicyUpdate: true
  rules:
    - name: sync-ceph-bucket-user-token-secret
      match:
        all:
          # This will match all `CephObjectStoreUser`s in the
          # rook-ceph namespace which have a sync_secret_to_namespace
          # label.
          # As the token secret is named in here, we use this when
          # generating the secret.
        - resources:
            kinds:
              - ceph.rook.io/v1/CephObjectStoreUser
            namespaces:
              - "rook-ceph"
            selector:
              matchExpressions:
                # We can't capture the value here, we just need to be
                # sure there is one.
                - {key: sync_secret_to_namespace, operator: Exists} 
      generate:
        apiVersion: v1
        kind: Secret
        name: "{{request.object.status.info.secretName}}"
        namespace: "{{request.object.metadata.labels.sync_to_namespace}}"
        synchronize: true
        clone:
          namespace: "{{request.object.metadata.namespace}}"
          name: "{{request.object.status.info.secretName}}"
