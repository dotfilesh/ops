---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: metrics
spec:
  interval: 30m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 51.9.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  maxHistory: 3
  install:
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    crds: CreateReplace
    remediation:
      retries: 5
  values:
    alertmanager:
      config:
        global:
          resolve_timeout: 5m
        receivers:
          - name: "null"
        route:
          group_by: ["alertname", "job"]
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 6h
          receiver: "null"
          routes:
            - receiver: "null"
              matchers:
                - alertname =~ "InfoInhibitor|Watchdog"
        inhibit_rules:
          - source_matchers:
              - severity = "critical"
            target_matchers:
              - severity = "warning"
            equal: ["alertname", "namespace"]
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: "nginx"
        hosts:
          - &host "alert-manager.${CLUSTER_NAME}.sys.${GLOBALSECRET__PUBLIC_DOMAIN}"
        tls:
          - hosts:
              - *host
      alertmanagerSpec:
        replicas: 3
        podAntiAffinity: hard
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: "ceph-block"
              resources:
                requests:
                  storage: 1Gi
    kubeStateMetrics:
      enabled: true
    kube-state-metrics:
      metricLabelsAllowlist:
        - "persistentvolumeclaims=[*]"
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          multicluster:
            etcd:
              enabled: true
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance
    kubeApiServer:
      enabled: true
    kubeControllerManager:
      enabled: true
    kubeScheduler:
      enabled: true
    kubeProxy:
      enabled: true
    kubeEtcd:
      enabled: false
    nodeExporter:
      enabled: true
    prometheus:
      ingress:
        enabled: true
        ingressClassName: nginx
        pathType: Prefix
        hosts:
          - &host prometheus.${CLUSTER_NAME}.sys.${GLOBALSECRET__PUBLIC_DOMAIN}
        tls:
          - hosts:
              - *host
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
      thanosIngress:
        enabled: true
        pathType: Prefix
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
          nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
        hosts:
          - &host sidecar.thanos.${CLUSTER_NAME}.api.${GLOBALSECRET__PUBLIC_DOMAIN}
        tls:
          - hosts:
            - *host
            secretName: thanos.${CLUSTER_NAME}.api.${GLOBALSECRET__PUBLIC_DOMAIN}
    prometheusSpec:
        additionalScrapeConfigs:
          - job_name: node-exporter
            scrape_interval: 1m
            scrape_timeout: 10s
            honor_timestamps: true
            static_configs:
              - targets:
                - 10.64.8.1
                #- 10.64.8.2
                - 10.64.8.3
                - 10.64.8.4
                - 10.64.8.5
                #- 10.64.8.7
        enableAdminAPI: true
        externalLabels:
          cluster: ${CLUSTER_NAME}
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        replicas: 1
        replicaExternalLabelName: "replica"
        retention: 2d
        retentionSize: "6GB"
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 10Gi
        thanos:
          image: quay.io/thanos/thanos:v0.32.4
          version: "v0.28.1"
          objectStorageConfig:
            name: thanos-objstore-secret
            key: objstore.yml
